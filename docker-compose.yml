version: "3.8"
services:
 postegres_cadastro:
  container_name: postegres_cadastro_ifood
  image: postgres:13.0
  environment:
   POSTGRES_USER: cadastro
   POSTGRES_PASSWORD: cadastro
  ports:
   - "5432:5432"
 postgres_marketplace:
    container_name: postgres_marketplace_ifood
    image: postgres:12.2
    environment: 
      POSTGRES_USER: marketplace
      POSTGRES_PASSWORD: marketplace
    ports:
      - "5433:5432"
 keycloak_ifood:
   container_name: keycloak_ifood
   image: jboss/keycloak:12.0.2
   environment: 
     KEYCLOAK_USER: admin
     KEYCLOAK_PASSWORD: admin
   ports:
     - "8180:8080"
 jaeger_ifood:
   container_name: jaeger_ifood
   image: jaegertracing/all-in-one:1.17
   ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
     
 prometheus_ifood:
    container_name: prometheus_ifood
    image: prometheus-ifood
    network_mode: "host"


 grafana_ifood:
    container_name: grafana_ifood
    image: grafana/grafana:6.5.0
    network_mode: "host"

 artemis_ifood:
    container_name: artemis_ifood
    image: vromero/activemq-artemis:2.11.0
    network_mode: "host"
    environment: 
      ARTEMIS_USERNAME: admin
      ARTEMIS_PASSWORD: admin

 mongodb_ifood:
    container_name: mongodb_ifood
    image: mongo:4.4.4-bionic
    ports:
      - "27017:27017"
    environment: 
      MONGO_INITDB_ROOT_USERNAME: pedido
      MONGO_INITDB_ROOT_PASSWORD: pedido
      MONGO_INITDB_DATABASE: pedido
 zookeeper:
    container_name: zookeeper_container
    image: debezium/zookeeper:1.6
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
 kafka:
    container_name: kafka_container
    image: debezium/kafka:1.6
   
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:     
     - ZOOKEEPER_CONNECT=zookeeper:2181
     - ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092 
     - KAFKA_ADVERTISED_HOST_NAME:192.168.1.107

     
 kafdrop:
    container_name: kafdrop_container
    image: obsidiandynamics/kafdrop:3.27.0
    environment:
       KAFKA_BROKERCONNECT: kafka:9092
    ports:
     - 9000:9000
    depends_on:
      - kafka
      
  # se ocorrer [1]: max virtual memory areas vm.max_map_count [65530] is too low, 
  # increase to at least [262144]
  # sudo sysctl -w vm.max_map_count=262144

 elastic:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    network_mode: "host"
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1    
      
 kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    network_mode: "host"
    environment:
      ELASTICSEARCH_HOSTS: http://localhost:9200
  
 logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash-oss:6.8.2
    volumes:
      - source: ./pipelines
        target: /usr/share/logstash/pipeline
        type: bind
    network_mode: "host"
    depends_on:
      - elastic
